<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flower.xin.orm.mapper.UserTokenDaoMapper">
  <resultMap id="BaseResultMap" type="com.flower.xin.orm.dao.UserTokenDao">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="expire_at" jdbcType="TIMESTAMP" property="expireAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, token, expire_at, created_at, updated_at
  </sql>

  <sql id="query_event_push_where_clause">
    <where>
      <if test="id != null">
        AND id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="token != null">
        AND token = #{token,jdbcType=VARCHAR}
      </if>
      <if test="createdAt != null">
        AND created_at = #{createdAt,jdbcType=TIMESTAMP}
      </if>
      <if test="updatedAt != null">
        AND updated_at = #{updatedAt,jdbcType=TIMESTAMP}
      </if>
    </where>
  </sql>

  <select id="selectBySelective" parameterType="com.flower.xin.orm.dao.UserTokenDao" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_user_token
    <include refid="query_event_push_where_clause"/>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_user_token
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_user_token
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.flower.xin.orm.dao.UserTokenDao">
    insert into tb_user_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="expireAt != null">
        expire_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="expireAt != null">
        #{expireAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flower.xin.orm.dao.UserTokenDao">
    update tb_user_token
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="expireAt != null">
        expire_at = #{expireAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flower.xin.orm.dao.UserTokenDao">
    update tb_user_token
    set user_id = #{userId,jdbcType=BIGINT},
      token = #{token,jdbcType=VARCHAR},
      expire_at = #{expireAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
